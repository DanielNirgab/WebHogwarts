    @Test
    public void testCreateStudent () throws Exception {
        Student student = new Student("StudentTest", 13);
        HttpEntity<Student> entity = new HttpEntity<>(student);
        ResponseEntity<Student> responsePost = this.restTemplate.exchange("/student/", HttpMethod.POST, entity, Student.class);

        assertThat(this.restTemplate.postForObject("http://localhost:" + port + "/student", student, Student.class))
                .isNotNull();
        assertThat(responsePost.getStatusCode()).isEqualTo(HttpStatus.OK);
        assertThat(responsePost.getBody()).isNotNull();
        assertThat(responsePost.getBody().getName()).isNotNull();
        assertThat(responsePost.getBody().getAge()).isNotNull();
        assertThat(responsePost.getBody().getId()).isNotNull();
    }

    @Test
    public void testGetStudentById () throws Exception {
        Student student = new Student("StudentTest", 13);
        HttpEntity<Student> entity = new HttpEntity<>(student);
        ResponseEntity<Student> responsePost = this.restTemplate.exchange("/student/", HttpMethod.POST, entity, Student.class);
        assertThat(this.restTemplate.postForObject("http://localhost:" + port + "/student", student, Student.class, student.getId()))
                .isNotNull();

        ResponseEntity<Student> responseGET = restTemplate.getForEntity("http://localhost:" + port + "/student/" +
                responsePost.getBody().getId(), Student.class);
        assertThat(responsePost.getBody().getName()).isEqualTo("StudentTest");
        assertThat(responsePost.getBody().getAge()).isEqualTo(13);
    }

    @Test
    public void testUpdateStudent () {
        Student secondStudent = new Student("SecondTestStudent", 29);
        HttpEntity<Student> entity = new HttpEntity<Student>(secondStudent);

        ResponseEntity<Student> responsePUT = restTemplate.exchange("/student", HttpMethod.PUT, entity, Student.class, secondStudent.getId());

        assertThat(responsePUT.getStatusCode()).isEqualTo(HttpStatus.OK);
        assertThat(responsePUT.getBody().getId()).isNotNull();
        assertThat(responsePUT.getBody().getName()).isEqualTo("SecondTestStudent");
        assertThat(responsePUT.getBody().getAge()).isEqualTo(29);
    }